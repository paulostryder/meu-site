{"version":3,"sources":["components/utils/useApi.js","components/utils/useDebouncedPromise.js","components/UI/InfiniteScroll/InfiniteScrool.js","components/UI/Button/Button.js","components/Promotion/Card/Card.js","components/UI/Modal/Modal.js","components/Promotion/Modal/CommentsTree/CommentsTree.js","components/Promotion/Modal/Modal.js","components/Promotion/List/List.js","components/Promotion/Search/Search.js","components/UI/Container/Container.js","pages/Promotion/Search/Search.js","components/Form/Field/Field.js","components/Promotion/Form/schema.js","components/Promotion/Form/Form.js","pages/Promotion/Form/Form.js","pages/Root.js","reportWebVitals.js","index.js"],"names":["initialRequestInfo","error","data","loading","useApi","config","useState","requestInfo","setRequestInfo","debouncedAxios","fn","delay","timeoutRef","useRef","params","Promise","resolve","reject","current","clearTimeout","window","setTimeout","a","response","useDebouncedPromise","axios","debounceDelay","localConfig","finalConfig","baseURL","updateRequestInfo","newInfo","isFetchMore","quietly","debounced","console","log","headers","newRequestInfo","undefined","total","Number","parseInt","onCompleted","UIInfiniteScroll","fetchMore","containerRef","useEffect","observer","IntersectionObserver","isIntersecting","disconnect","root","rootMargin","threshold","observe","ref","UIButton","children","className","Component","component","theme","restProps","defaultProps","PromotionCard","promotion","onClickComments","onClickDelete","src","imageUrl","alt","title","price","comments","length","comment","onClick","href","url","target","rel","Link","to","id","type","portalRoot","document","getElementById","UIModal","isOpen","onClickClose","ReactDOM","createPortal","PromotionModalCommentsTree","sendComment","tree","useMemo","list","roots","childrenByParentId","forEach","item","parentId","push","buildNodes","nodes","map","node","getTree","setComment","activeCommentBox","setActiveCommentBox","renderItem","user","avatarUrl","name","value","onChange","ev","renderList","PromotionModal","promotionId","_expand","load","loadinfo","method","sendCommentInfo","preventDefault","userId","text","onSubmit","placeholder","disabled","PromotionList","promotions","refetch","setPromotionId","deletePromotion","deletePromotionInfo","lenght","baseParams","_embed","_order","_sort","_limit","PromotionSearch","page","setPage","mountRef","search","setSearch","loadInfo","_page","title_like","classname","Placeholder","newPage","prevRequestInfo","UIContainer","PagesPromotionSearch","FormField","label","useField","field","meta","htmlFor","yup","shape","required","initialValue","PromotionForm","history","useHistory","save","saveInfo","values","initialValues","formValues","validationSchema","schema","render","PagesPromotionForm","useParams","Root","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.83c76617.chunk.js","sourcesContent":["import { useState } from 'react'\nimport axios from 'axios'\nimport useDebouncedPromise from './useDebouncedPromise';\n\n\n\nconst initialRequestInfo = {\n    error: null,\n    data:  null,\n    loading: false,\n};\n\nexport default function useApi(config){\n  const [requestInfo, setRequestInfo] = useState(initialRequestInfo);  \n  const debouncedAxios = useDebouncedPromise(axios, config.debounceDelay);\n   \n    async function call(localConfig) {\n        let response = null;      \n        \n\n        const finalConfig ={\n            baseURL: 'http://localhost:5000',\n            updateRequestInfo: (newInfo) => newInfo,\n            ...config,\n            ...localConfig,\n        };\n\n        if (finalConfig.isFetchMore) {\n            setRequestInfo({\n                ...initialRequestInfo,\n                data: requestInfo.data,\n                loading: true,\n            });    \n        } else if (!finalConfig.quietly) {\n            setRequestInfo({\n              ...initialRequestInfo,\n              loading: true,\n            });        \n        }   \n\n        const fn = finalConfig.debounced ? debouncedAxios : axios;\n        try {\n            response = await fn(finalConfig);\n            console.log(response.headers);\n            const newRequestInfo = {                        \n                ...initialRequestInfo,                \n                data: response.data,\n            };\n\n            if (response.headers['x-total-count'] !== undefined) {\n                newRequestInfo.total=Number.parseInt(response.headers['x-total-count'], 10);\n            }\n\n            setRequestInfo(\n                finalConfig.updateRequestInfo(newRequestInfo, requestInfo)\n                );\n                    \n        }   catch (error) {\n            setRequestInfo(\n                finalConfig.updateRequestInfo(\n                    {                          \n                        ...initialRequestInfo,\n                        error,\n              }, \n                requestInfo\n               )\n              ); \n            }\n\n        if (config.onCompleted) {\n            config.onCompleted(response);\n        } \n\n        return response;\n    }\n    return [\n        call,\n        requestInfo\n    ];\n}","import { useRef } from 'react';\n\nexport default function useDebouncedPromise(fn,delay) {\n    let timeoutRef = useRef (null);\n    \n\n    function handler(...params){        \n        return new Promise((resolve, reject)=> {\n            if (timeoutRef.current) {\n                clearTimeout(timeoutRef.current);\n            }\n\n\n            timeoutRef.current = window.setTimeout(async () => {            \n           try {\n            const response = await fn(...params);\n            resolve (response)\n           } catch(e) {\n               reject (e);\n           }\n            }, delay);\n        });    \n    }\n    return handler;\n}","import React, {useEffect,useRef} from 'react';\n\n\nconst UIInfiniteScroll = ({ fetchMore }) => {\n\n    const containerRef=useRef();\n\n    useEffect(() => {\n        const options = {\n            root: null,\n            rootMargin: '0px',\n            threshold: 1.0,\n        };\n  \n\n        const observer = new IntersectionObserver(([entry]) => {\n            if (entry.isIntersecting) {\n                observer.disconnect();\n                fetchMore();\n            }\n        },options);\n        observer.observe(containerRef.current)\n\n        return () => {\n            observer.disconnect();\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);    \n\n    return <div ref={containerRef} />;\n};\n\nexport default UIInfiniteScroll;","import React from 'react';\nimport './Button.css'\n\n\nconst UIButton = ({\n    children, \n    className, \n    component: Component,\n    theme, \n    ...restProps\n}) => {\n    return (\n        <Component className= {`ui-button ui-button--${theme} ${className}`}{...restProps}>\n            {children}\n        </Component>\n    );\n\n\n};\n\nUIButton.defaultProps = {\n    component:'a',\n    className:'',\n    theme: 'bordered-blue',\n\n};\n\n\nexport default UIButton;","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { BiTrash} from 'react-icons/bi'\nimport UIButton from 'components/UI/Button/Button';\nimport './Card.css';\n\nconst PromotionCard = ({promotion, onClickComments, onClickDelete}) => (\n    <div className=\"promotion-card\">\n        <img src={promotion.imageUrl} alt={promotion.title} className=\"promotion-card__image\" />\n        <div className=\"promotion-card__info\">\n            <h1 className=\"promotion-card__title\">{promotion.title}</h1>\n            <span className=\"promotion-card__price\" >R$ {promotion.price}</span>\n            <footer className=\"promotion-card__footer\" >\n                {promotion.comments.length > 0 && (            \n                   <div className=\"promotion-card__comment\"> \"{promotion.comments[0].comment}\" </div>\n                   )}\n\n                    <button className=\"promotion-card__comments-count\" onClick={onClickComments}> \n                    {promotion.comments.length} {' '}\n                    {promotion.comments.length > 1 ? 'Comentarios' : 'Comentario'} </button>\n                    <UIButton\n                        component=\"a\" \n                        href={promotion.url} \n                        target=\"_blank\" \n                        rel=\"noopener noreferrer\"                         \n                    > \n                        Ir Para o Site \n                    </UIButton>\n                    <UIButton\n                        component = {Link} \n                        to = {`/edit/${promotion.id}`}\n                        className=\"promotion-card__edit-button\"                             \n                    >       \n                        Editar                \n                    </UIButton>    \n            </footer>\n            <button \n            type=\"button\" \n            className=\"promotion-card__delete-button\" \n            onClick={onClickDelete}\n            >\n                <BiTrash />\n            </button>\n        </div>\n    </div>\n);\n\nexport default PromotionCard;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Modal.css';\n\nconst portalRoot = document.getElementById('portal-root');\n\nconst UIModal = ({ children, isOpen, onClickClose}) => {\n    if (!isOpen) {\n        return null;\n    }\n    return ReactDOM.createPortal(\n        <div className=\"ui-modal__overlay\">\n            <div className=\"ui-modal\">\n                <button type=\"button\" className=\"ui-modal__close-button\" onClick={onClickClose}> X </button>\n                { children }\n            </div>\n        </div>,\n        portalRoot,\n    );\n};\n\nexport default UIModal;","import React, {useState, useMemo} from 'react';\nimport './CommentsTree.css';\n\nfunction getTree(list) {\n    if (!list)  {\n        return [];\n    }\n    const roots = [];\n    const childrenByParentId = {};\n\n    list.forEach((item) =>{\n        if (!item.parentId) {\n            roots.push(item);\n            return;\n        }\n\n        if (!childrenByParentId[item.parentId]) {\n            childrenByParentId[item.parentId]=[];\n        }\n\n        childrenByParentId[item.parentId].push(item);\n    });\n\n    function buildNodes(nodes) {\n        if (!nodes) {\n            return null;\n        }\n        return nodes.map((node) => ({\n            ...node,\n            children: buildNodes (childrenByParentId[node.id]),\n        }))\n    }\n\n    return buildNodes(roots);\n\n    \n}\n\n\nconst PromotionModalCommentsTree = ({comments, sendComment}) => {\n    const tree = useMemo(() => getTree(comments), [comments]);\n    const [comment,setComment] = useState('');\n    const [activeCommentBox, setActiveCommentBox] = useState(null);\n    if (!comments) {\n        return <div>Carregando...</div>;\n    }\n\n\n    function renderItem(item) {\n        return (\n            <li className=\"promotion-modal-comments-tree__item\">\n            <img \n            src={item.user.avatarUrl} \n            alt={`foto de ${item.user.name}`} \n            className=\"promotion-modal-comments-tree__item__avatar\"\n            />\n            <div className=\"promotion-modal-comments-tree__item__info\">\n              <span className= \"promotion-modal-comments-tree__item__name\"> {item.user.name}</span>\n              <p> {item.comment} </p>\n              <button type=\"button\" \n              className=\"promotion-modal-comments-tree__answer-button\"\n              onClick={() => {\n                setComment('');  \n                setActiveCommentBox(\n                  activeCommentBox === item.id ? null : item.id\n                  );\n                }}\n            >\n                Responder\n            </button> \n            {activeCommentBox === item.id && (                      \n            <div className=\"promotion-modal-comments-tree__comment-box\">\n                <textarea \n                    value={comment} \n                    onChange={(ev) => setComment(ev.target.value)}\n                />\n                <button \n                    type=\"button\" \n                    className=\"promotion-modal-comments-tree__send-button\" \n                    onClick={() => {\n                        sendComment(comment, item.id);\n                        setComment('');\n                        setActiveCommentBox(null);                                                             \n                    \n                    }}\n                >\n\n                Enviar \n                \n                </button>\n            </div>  \n            )} \n            {item.children && renderList(item.children)}\n         </div>                                                    \n        </li>\n        );\n    }\n\n    function renderList (list){        \n      return (\n        <ul className=\"promotion-modal-comments-tree\">\n            {list.map(renderItem)}                       \n        </ul>\n      );\n    }\n\n    return renderList (tree);\n};    \n\nPromotionModalCommentsTree.defaultProps = {\n    sendComment: () => {},\n};\n\nexport default PromotionModalCommentsTree;","import React, {useEffect, useState} from 'react';\nimport UIModal from 'components/UI/Modal/Modal';\nimport useApi from '../../utils/useApi';\nimport PromotionModalCommentsTree from './CommentsTree/CommentsTree';\nimport './Modal.css';\n\n\n\nconst PromotionModal = ({promotionId, onClickClose}) => {\n    const[comment,setComment] = useState('');\n    const [load, loadinfo] = useApi({\n        url: '/comments', \n        params: {\n            promotionId,\n            _expand:'user'\n        }       \n    });\n\n    const [sendComment,sendCommentInfo] = useApi({\n        url: '/comments', \n        method: 'POST',            \n    });\n\n    useEffect(() => {\n        load();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    async function onSubmit(ev) {\n        ev.preventDefault();\n      try {                            \n        await sendComment({\n            data: {\n                userId: 1,\n                promotionId,\n                comment,\n            },\n        });\n        setComment('');\n        load({quietly: true});\n      } catch (e) {}\n      \n    }\n\n   async function sendAnswer (text, parentId) {\n        await sendComment({\n            data: {\n                userId: 1,\n                promotionId,\n                comment: text,\n                parentId,\n            },\n        });\n        load({quietly: true});\n    }\n\n    return (\n        <UIModal isOpen onClickClose={onClickClose}>\n            <form className=\"promotion-modal__comment-form\" onSubmit={onSubmit} >\n                <textarea placeholder=\"Comentar...\" \n                onChange={(ev) => setComment(ev.target.value)} \n                value={comment}\n                disabled={sendCommentInfo.loading} \n                />\n                <button type=\"submit\" disabled={sendCommentInfo.loading}>\n                    {sendCommentInfo.loading ? 'enviando...' : 'Enviar' }                    \n                </button>\n            </form>\n            <PromotionModalCommentsTree \n             comments = {loadinfo.data}\n             sendComment={sendAnswer} \n            />            \n        </UIModal>\n    )\n}\n\n\nexport default PromotionModal;","import React, { useState } from 'react';\nimport useApi from 'components/utils/useApi';\nimport PromotionCard from '../Card/Card';\nimport PromotionModal from '../Modal/Modal';\nimport './List.css';\n\nconst PromotionList =({loading, error, promotions, refetch}) => {\n\n    const [promotionId, setPromotionId]=useState(null);\n    const [deletePromotion,deletePromotionInfo] = useApi ({\n        method: 'DELETE',\n    });\n    if (error) {\n        return <div>Algo de errado não está certo...</div>;\n    }\n   \n    if (promotions === null || deletePromotionInfo.loading) {\n        return <div>Carregando</div>;\n    }\n\n    if(promotions.lenght === 0) {\n        return <div>Nenhum resultado encontrado</div>;\n    }\n    return (\n        <div className=\"promotion-list\">\n            {promotions.map((promotion) =>(\n                <PromotionCard \n                promotion={promotion} \n                onClickComments={() => setPromotionId(promotion.id)}\n                onClickDelete={async ()=> {\n                    await deletePromotion({\n                        url:`/promotions/${promotion.id}`,\n                    });\n                    refetch();\n                }}                 \n                />\n            ))}\n            {loading &&  <div>Carregando mais promoções...</div>}            \n            {promotionId && (\n            <PromotionModal \n            promotionId={promotionId} \n            onClickClose={() => setPromotionId(null)}\n            />               \n            )}\n        </div>\n        \n    );\n};\nexport default PromotionList;","import React, { useState, useEffect, useRef } from 'react';\nimport useApi from '../../utils/useApi';\nimport UIInfiniteScroll from 'components/UI/InfiniteScroll/InfiniteScrool'\nimport { Link } from 'react-router-dom';\nimport PromotionList from '../List/List';\nimport './Search.css';\nimport UIButton from 'components/UI/Button/Button';\n\n\nconst baseParams = {\n    _embed: 'comments',\n    _order: 'desc',\n    _sort: 'id',\n    _limit: 5,\n};\n\nconst PromotionSearch = () => {\n    const[page,setPage] = useState(1);\n    const mountRef = useRef (null);\n    const [search,setSearch]=useState('');\n    const [load, loadInfo] = useApi({\n        debounceDelay: 300,\n        url: '/promotions',\n        method: 'get',        \n    });\n\n\n    useEffect(() => {\n        load ({             \n            debounced: mountRef.current,\n            params: {\n                ...baseParams,            \n                _page: 1,\n                title_like: search || undefined,\n            },\n        });\n\n        if (!mountRef.current) {         \n            mountRef.current = true;\n            }        \n        // eslint-disable-next-line react-hooks/exhaustive-deps     \n    }, [search]);\n\n    function fetchMore() {\n        const newPage = page + 1;\n        load({\n            isFetchMore: true,\n            params: {\n                ...baseParams,            \n                _page: newPage,\n                title_like: search || undefined,\n            },            \n            updateRequestInfo: (newRequestInfo, prevRequestInfo) => ({\n                ...newRequestInfo,\n                data: [\n                    ...prevRequestInfo.data,\n                    ...newRequestInfo.data\n                ],\n            }),\n        });\n\n        setPage(newPage);\n\n    }\n    \n\n    return (\n        <div classname=\"promotion-search\">\n            <header className=\"promotion-search__header\">\n                <h1> Promo Show </h1>\n                <UIButton component={Link} to = \"/create\" theme=\"contained-green\"> \n                    Nova promoção \n                </UIButton>\n            </header>\n            <input type=\"search\"\n                className=\"promotion-search__input\"\n                Placeholder=\"buscar\"\n                value={search}\n                onChange={(ev)=> setSearch(ev.target.value)}\n            />\n            <PromotionList \n            promotions={loadInfo.data} \n            loading={loadInfo.loading}\n            error= {loadInfo.error}\n            refetch={() => {\n                load({\n                    params: baseParams,\n                })\n            }}\n             \n            />\n            {loadInfo.data && \n                !loadInfo.loading && \n                loadInfo.data?.length < loadInfo.total && ( \n                    <UIInfiniteScroll fetchMore={fetchMore}/>\n            )}\n        </div>\n    );\n};\n\nexport default PromotionSearch;","import React from 'react'\nimport './Container.css';\n\nconst UIContainer = ({children}) => (\n    <div \n        className=\"ui-container\"\n    >\n        {children}\n    </div>\n);\n\nexport default UIContainer;","import React from 'react';\nimport PromotionSearch from 'components/Promotion/Search/Search';\nimport UIContainer from 'components/UI/Container/Container';\n\nconst PagesPromotionSearch = () => {\n  return (\n   <UIContainer>\n      <PromotionSearch/>\n    </UIContainer>       \n  );\n};\n\nexport default PagesPromotionSearch;","import React  from 'react';\nimport { useField } from \"formik\";\nimport './Field.css';\n\nconst FormField = ({name, id, label, ...restProps }) => {\n    const [field, meta] = useField ({ name, id, ...restProps});\n\n    return (\n        <>\n            {label &&\n                <label htmlFor ={id ?? name} className=\"form-field__label\" >{label}</label>\n            }\n        <input {...field} name={name} id={id ?? name} className={`form-field__input ${\n            meta.error && 'form-field__input--has-error'\n        }`} \n        />\n        {meta.error && (\n        <span className=\"form-field__error-message\">{meta.error}</span>\n         )}\n        </>\n    );\n};\n\nexport default FormField;","import * as yup from 'yup';\n\n\nexport default yup.object().shape({\n    title: yup.string().required('Campo Obrigatorio'),\n    url: yup.string().url('Url deve ser Válida').required('Campo Obrigatorio'),\n    imageUrl: yup.string().url('Url deve ser Válida').required('Campo Obrigatorio'),\n    price: yup.number().required('Campo Obrigatorio'),\n});","import React, {useEffect} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport useApi from 'components/utils/useApi';\nimport UIButton from 'components/UI/Button/Button';\nimport Field from 'components/Form/Field/Field'\nimport { Formik,Form } from 'formik';\nimport schema from './schema';\nimport './Form.css';\n\n\nconst initialValue = {\n    title:'',\n    url:'',\n    imageUrl:'',\n    price: 0,\n}\n\nconst PromotionForm = ({ id }) => {\n\n  const history = useHistory();\n  const [load, loadInfo] = useApi({\n     url:  `/promotions/${id}`,\n     method: 'get',    \n  });\n\n\n\n  const [save,saveInfo] = useApi ({\n      url: id ? `/promotions/${id}` : '/promotions',\n      method: id ? 'put' : 'post',\n      onCompleted: (response) => {\n        if (!response.error) {\n            history.push('/');\n        }   \n    }          \n  })\n\n  useEffect(() => {\n      if (id) {\n          load();          \n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n    \n  \n\n  function onSubmit(formValues) {      \n      save({\n          data: formValues,\n      });\n  }  \n      \n    const values = id ? loadInfo.data : initialValue;\n       \n    return (\n        <div>\n            <h1>Promo Show</h1>\n            <h2>Nova Promo</h2>\n            {!values \n            ? (\n              <div>Carregando...</div>\n            ) : (   \n               <Formik \n                initialValues={values}\n                onSubmit={onSubmit}\n                validationSchema={schema}\n                render={() => (  \n                    <Form>\n                    {saveInfo.loading && <span> Salvando Dados...</span>}\n                    <div className=\"promotion-form__group\">                       \n                        <Field name=\"title\" type=\"text\" label=\"Título\" />                                                    \n                    </div>\n\n                    <div className=\"promotion-form__group\">\n                        <Field name=\"url\" type=\"text\" label = \"link\"/>                                      \n                    </div>\n\n                    <div className=\"promotion-form__group\">                       \n                        <Field name=\"imageUrl\" type=\"text\" label = \"Imagem url\" />                        \n                    </div>\n                    <div className=\"promotion-form__group\">                        \n                        <Field name=\"price\" type=\"number\" label = \"Preço\"/>\n                    </div>\n                    <div>                \n                        <UIButton component = \"button\" type =\"submit\">salvar</UIButton>\n                    </div>\n                </Form>\n                )}       \n            />    \n        )}\n    </div>    \n  )  \n};\n\nexport default PromotionForm;","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport PromotionForm from 'components/Promotion/Form/Form';\nimport UIContainer from 'components/UI/Container/Container';\n\nconst PagesPromotionForm = () => {\n    const {id} = useParams();\n\n    return(\n      <UIContainer>\n        <PromotionForm id={id ? Number.parseInt(id, 10) : null}/>\n      </UIContainer>\n    );\n        \n    \n}\n\nexport default PagesPromotionForm;","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n     \n} from 'react-router-dom';\nimport PagesPromotionSearch from './Promotion/Search/Search';\nimport PagesPromotionForm from './Promotion/Form/Form';\n\nconst Root = () => {\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/create\" component={PagesPromotionForm} />\n                <Route path=\"/edit/:id\" component={PagesPromotionForm} />\n                <Route path=\"/\" component={PagesPromotionSearch} />\n            </Switch>\n        </Router>\n    );\n};\n\nexport default Root;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './pages/Root';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}